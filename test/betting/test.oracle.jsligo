#import "../../src/contracts/jsligo/betting/errors.jsligo" "Errors"
#import "helpers/bootstrap.jsligo" "Bootstrap"
#import "helpers/helper.jsligo" "Helper"
#import "helpers/assert.jsligo" "Assert"
#import "../common/log.jsligo" "Log"

const _ = Log.describe("[Betting - ChangeOracleAddress] test suite");


const _test_change_oracle_address_from_manager_should_work = () => {
    let [_, betting_contract, betting_taddress, elon, jeff, _, _, _] = Bootstrap.bootstrap();
    let _ = Assert.oracle(betting_taddress)(jeff);

    let _ = Helper.trsc_change_oracle_address_success(betting_contract, elon, elon);
    let _ = Assert.oracle(betting_taddress)(elon);
    "OK"
};

const _test_change_oracle_address_from_oracle_should_not_work = () => {
    let [_, betting_contract, betting_taddress, elon, jeff, _, _, _] = Bootstrap.bootstrap();
    let _ = Assert.oracle(betting_taddress)(jeff);

    let ret = Helper.trsc_change_oracle_address(betting_contract, jeff, elon);
    let _ = Assert.string_failure(ret)(Errors.not_manager);
    let _ = Assert.oracle(betting_taddress)(jeff);
    "OK"
};

const _test_change_oracle_address_from_unauthorized_address_should_not_work = () => {
    let [_, betting_contract, betting_taddress, _, jeff, alice, _, _] = Bootstrap.bootstrap();
    let _ = Assert.oracle(betting_taddress)(jeff);

    let ret = Helper.trsc_change_oracle_address(betting_contract, alice, alice);
    let _ = Assert.string_failure(ret)(Errors.not_manager);
    let _ = Assert.oracle(betting_taddress)(jeff);
    "OK"
};


const test_change_oracle_address_from_manager_should_work = _test_change_oracle_address_from_manager_should_work();
const test_change_oracle_address_from_oracle_should_not_work = _test_change_oracle_address_from_oracle_should_not_work();
const test_change_oracle_address_from_unauthorized_address_should_not_work = _test_change_oracle_address_from_unauthorized_address_should_not_work();