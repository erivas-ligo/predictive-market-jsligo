#import "../../../src/contracts/jsligo/betting/callback/main.jsligo" "Callback"
#import "../../../src/contracts/jsligo/betting/main.jsligo" "Betting"
#import "../../../src/contracts/jsligo/betting/types.jsligo" "Types"
#import "callback.jsligo" "Helper_betting_callback"

const plain_timestamp : timestamp = ("1970-01-01T00:00:01Z" as timestamp);

const bootstrap = () => {
  // Boostrapping accounts 
  let _= Test.reset_state(6 as nat, (list([]) as list<tez>));
  let _baker: address = Test.nth_bootstrap_account(0);
  let elon:   address = Test.nth_bootstrap_account(1);
  let jeff:   address = Test.nth_bootstrap_account(2);
  let alice:  address = Test.nth_bootstrap_account(3);
  let bob:    address = Test.nth_bootstrap_account(4);
  let james:  address = Test.nth_bootstrap_account(5);

  let init_bet_config = {
    is_betting_paused       : false,
    is_event_creation_paused : false,
    min_bet_amount          : (1000000 as mutez),
    retained_profit_quota   : (10 as nat)
  };
  
  // Boostrapping storage
  let init_storage = {
    manager       : elon,
    oracle_address : jeff,
    bet_config     : init_bet_config,
    events        : (Big_map.empty as big_map<nat, Types.event_type>),
    events_bets   : (Big_map.empty as big_map<nat, Types.event_bets>),
    eventsIndex  : (0 as nat),
    metadata      : (Map.empty as map<string, bytes>)
  };

  // Boostrapping BETTING contract 
  let betting_path = "src/contracts/jsligo/betting/main.jsligo";
  let iBis = Test.run( (x : Types.storage) => x, init_storage);
  let [betting_address, _, _] = Test.originate_from_file(betting_path, "main", list(["getManager", "getOracleAddress", "getBettingStatus", "getEventCreationStatus", "retrieveEvent"]), iBis, 0 as mutez);
  let betting_taddress = (Test.cast_address(betting_address) as typed_address<Types.action,Types.storage> );
  let betting_contract = Test.to_contract (betting_taddress);
  
  [betting_address, betting_contract, betting_taddress, elon, jeff, alice, bob, james]
};

const bootstrap_betting_callback = (bettingAddr : address) => {
    let betting_callback = Helper_betting_callback.originate_from_file(Helper_betting_callback.base_storage(bettingAddr));    
    betting_callback
};